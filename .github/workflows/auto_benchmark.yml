name: Conditional Script Execution and Commit

on:
  push:

jobs:
  execute-script-and-commit:
    runs-on: arena-cpu-judger
    permissions:
      contents: write  # 给予写入权限
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # 获取完整的git历史
        token: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub Token
    
    - name: Extract script path from commit message
      id: extract_path
      run: |
        COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.sha }})
        SCRIPT_PATH=$(echo "$COMMIT_MSG" | grep -oP '(?<=\[script:).*?(?=\])')
        echo "SCRIPT_PATH=$SCRIPT_PATH" >> $GITHUB_OUTPUT
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'  # You can specify your desired Go version here

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable  # You can specify a version like '1.68.0' if needed
        profile: minimal
        override: true
    - name: Validate and execute script
      if: steps.extract_path.outputs.SCRIPT_PATH
      run: |
        SCRIPT_PATH="${{ steps.extract_path.outputs.SCRIPT_PATH }}"
        if [[ -f "$SCRIPT_PATH" ]]; then
          if [[ "$SCRIPT_PATH" == *.sh ]]; then
            chmod +x "$SCRIPT_PATH"
            ./"$SCRIPT_PATH"
          elif [[ "$SCRIPT_PATH" == *.py ]]; then
            python "$SCRIPT_PATH"
          else
            echo "Unsupported script type. Only .sh and .py files are allowed."
            exit 1
          fi
        else
          echo "Script not found in the repository: $SCRIPT_PATH"
          exit 1
        fi

    - name: Create Pull Request
      if: steps.extract_path.outputs.SCRIPT_PATH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create a new branch
        BRANCH_NAME="auto-update-$(date +%Y%m%d-%H%M%S)"
        git checkout -b $BRANCH_NAME

        # Commit changes
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add spj_output/
        git commit -m "Auto-update: Changes in spj_output after script execution" || echo "No changes to commit"

        # Push the branch to the remote repository
        git push origin $BRANCH_NAME

        # Create a pull request
        PR_URL=$(gh pr create --base main --head $BRANCH_NAME --title "Auto-update: Changes in spj_output" --body "This pull request was automatically created by the CI workflow. It contains updates to the spj_output/ directory after script execution.")
        echo "Pull request created: $PR_URL"
        
    - name: Skip execution message
      if: "!steps.extract_path.outputs.SCRIPT_PATH"
      run: echo "No script specified in commit message. Skipping execution and commit."